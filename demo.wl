Clear["Global`*"]
x1=1.4;
x2=1.6;
x3=1.2;
x4=0.2;
x5=0.2;
f1:=x^2/a^2+y^2/(a^2-1);
f2:=(x-1)^2/r^2+y^2/r^2;
eli1=f1/.a->x1;
eli2=f1/.a->x2;
circ=f2/.r->x3;
u=Max[x1,x2,x3];
demoraw=Show[ListPlot[{{-1,0},{1,0}}],ContourPlot[{eli1==1,eli2==1,circ==1},{x,-u,u},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},PlotPoints->100],PlotRange->All,GridLines->Automatic,AspectRatio->Automatic,WorkingPrecision->20];
Export["demoraw.png",demoraw];
A1=NSolve[eli1==1&&circ==1&&y>0,{x,y},Reals];
xa=x/.A1[[1]];
A2=NSolve[eli2==1&&circ==1&&y>0,{x,y},Reals];
xb=x/.A2[[1]];
A3=NSolve[eli1==1&&x==(-x1+xa)/2&&y>0,{x,y},Reals];
P1={{-1,0},{x,y}/.A3[[1]],{1,0}};
A4=NSolve[circ==1&&x==(xa+xb)/2&&y<0,{x,y},Reals];
P2={{1,0},{x,y}/.A4[[1]],{1,0}};
A5=NSolve[eli2==1&&x==(x2+xb)/2&&y>0,{x,y},Reals];
P3={{-1,0},{x,y}/.A5[[1]],{1,0}};
demo2Dfig=Show[ListPlot[{{-1,0},{1,0}}],ContourPlot[{eli1==1},{x,-u,xa},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},PlotPoints->100],ContourPlot[{eli2==1},{x,xb,u},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},PlotPoints->100],ContourPlot[{circ==1},{x,xa,xb},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},PlotPoints->100],ListLinePlot[P1,PlotStyle->{RGBColor[1,0,0]}],ListLinePlot[P2,PlotStyle->{RGBColor[1,0,0]}],ListLinePlot[P3,PlotStyle->{RGBColor[1,0,0]}],PlotRange->All,GridLines->Automatic,AspectRatio ->Automatic];
Export["demo2D.png",demo2Dfig];

f3:=x^2/a^2+(y^2+z^2)/(a^2-1);
f4:=(x-1)^2/r^2+(y^2+z^2)/r^2;
eli1=f3/.a->x1;
eli2=f3/.a->x2;
circ=f4/.r->x3;
demo3Dfig=Show[ListPointPlot3D[{{-1,0,0},{1,0,0}}],ContourPlot3D[{eli1==1},{x,-u,xa},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},BoundaryStyle->None,ContourStyle->None,PlotPoints->100],ContourPlot3D[{circ==1},{x,xa,xb},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},BoundaryStyle->None,ContourStyle->None,PlotPoints->100],ContourPlot3D[{eli2==1},{x,xb,u},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},BoundaryStyle->None,ContourStyle->None,PlotPoints->100],PlotRange->All,BoxRatios ->Automatic];
Export["demo3D.png",demo3Dfig];

SeedRandom[0];
n=20000;
d0=RandomVariate[MatrixPropertyDistribution[r.{0,0,1},r \[Distributed] CircularRealMatrixDistribution[3]],n];
R=(RotationMatrix[{{1,0,0},#}])&/@d0;
theta=RandomVariate[ProbabilityDistribution[0.5*Cos[v],{v,-Pi/2,Pi/2}],n];
demo1Dcos=Show[Histogram[theta,20,"ProbabilityDensity"],Plot[PDF[ProbabilityDistribution[0.5*Cos[v],{v,-Pi/2,Pi/2}],x],{x,-Pi/2,Pi/2}],PlotRange->All];
Export["demo1Dcos.png",demo1Dcos];
phi=RandomReal[{0,2*Pi},n];
dir={};
dirp={};
For[i=1,i<=n,i++,AppendTo[dir,RotationTransform[phi[[i]],{1,0,0}][RotationTransform[theta[[i]],{0,0,1}][{1,0,0}]]];AppendTo[dirp,R[[i]].dir[[-1]]]];
demo2Dcos=ListPointPlot3D[dir,BoxRatios ->Automatic,ViewPoint->{5,0,0}];
Export["demo2Dcos.png",demo2Dcos];

N1[{x_,y_,z_},a_]:=Normalize[{2*x/a^2,2*y/(a^2-1),2*z/(a^2-1)}];
N2[{x_,y_,z_},r_]:=Normalize[{2*(x-1)/r^2,2*y/r^2,2*z/r^2}];
f5:=(x+1)^2/r^2+(y^2+z^2)/r^2;
eli1=f3/.a->x1;
eli2=f3/.a->x2;
circ=f4/.r->x3;
c1=f5/.r->x4;
c2=f4/.r->x5;
u=Max[x1,x2,x3];
A1=NSolve[eli1==1&&circ==1&&z==0,{x,y,z},Reals];
xa=x/.A1[[1]];
A2=NSolve[eli2==1&&circ==1&&z==0,{x,y,z},Reals];
xb=x/.A2[[1]];
SeedRandom[0];
P={};
While[Length[P]<=15,
d0=RandomVariate[MatrixPropertyDistribution[r.{0,0,1},r \[Distributed] CircularRealMatrixDistribution[3]],1];
R=(RotationMatrix[{{1,0,0},#}])&/@d0;
d=({-1,0,0}+#)&/@(x4*d0);
i=1;
theta=RandomVariate[ProbabilityDistribution[0.5*Cos[v],{v,-Pi/2,Pi/2}],1];
phi=RandomReal[{0,2*Pi},1];
j=1;
p=d[[i]];
ro=R[[i]];
P={p};
p0={p};
dir=RotationTransform[phi[[j]],{1,0,0}][RotationTransform[theta[[j]],{0,0,1}][{1,0,0}]];
If[dir[[1]]<0,dir=-1*dir];
dir=Normalize[ro.dir];
pt=P[[-1]]+t*dir;
flag=-1;
While[flag!=0&&flag!=4,
s=3*Max[x1,x2];
T1=NSolve[{(eli1/.{x->pt[[1]],y->pt[[2]],z->pt[[3]]})==1,t>10^-8,pt[[1]]<=xa},t,Reals];
If[Length[T1]!=0,If[Min[t/.T1]<s,flag=1;s=Min[t/.T1];]];
T2=NSolve[{(eli2/.{x->pt[[1]],y->pt[[2]],z->pt[[3]]})==1,t>10^-8,pt[[1]]>xb},t,Reals];
If[Length[T2]!=0,If[Min[t/.T2]<s,flag=2;s=Min[t/.T2];]];
T3=NSolve[{(circ/.{x->pt[[1]],y->pt[[2]],z->pt[[3]]})==1,t>10^-8,pt[[1]]>xa,pt[[1]]<=xb},t,Reals];
If[Length[T3]!=0,If[Min[t/.T3]<s,flag=3;s=Min[t/.T3];]];
T0=NSolve[{(c1/.{x->pt[[1]],y->pt[[2]],z->pt[[3]]})==1,t>10^-8},t,Reals];
If[Length[T0]!=0,If[Min[t/.T0]<s,flag=0;s=Min[t/.T0];]];
T4=NSolve[{(c2/.{x->pt[[1]],y->pt[[2]],z->pt[[3]]})==1,t>10^-8},t,Reals];
If[Length[T4]!=0,If[Min[t/.T4]<s,flag=4;s=Min[t/.T4];]];
If[s==3*Max[x1,x2],Print["Error!"];Break[];];
If[flag==0,p=pt/.t->s;AppendTo[P,p];AppendTo[p0,p];Break[];];
If[flag==4,p=pt/.t->s;AppendTo[P,p];AppendTo[p0,p];Break[];];
If[flag==1,p=pt/.t->s;AppendTo[P,p];AppendTo[p0,p];eN=N1[p,x1];AppendTo[p0,p+eN];AppendTo[p0,p];dir=Normalize[dir-2*(dir.eN)*eN];pt=P[[-1]]+t*dir;];
If[flag==2,p=pt/.t->s;AppendTo[P,p];AppendTo[p0,p];eN=N1[p,x2];AppendTo[p0,p+eN];AppendTo[p0,p];dir=Normalize[dir-2*(dir.eN)*eN];pt=P[[-1]]+t*dir;];
If[flag==3,p=pt/.t->s;AppendTo[P,p];AppendTo[p0,p];eN=N2[p,x3];AppendTo[p0,p+eN];AppendTo[p0,p];dir=Normalize[dir-2*(dir.eN)*eN];pt=P[[-1]]+t*dir;];
]]
demogeoN=Show[ContourPlot3D[{eli1==1},{x,-u,xa},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},BoundaryStyle->None,ContourStyle->None,PlotPoints->100],ContourPlot3D[{circ==1},{x,xa,xb},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},BoundaryStyle->None,ContourStyle->None,PlotPoints->100],ContourPlot3D[{eli2==1},{x,xb,u},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},BoundaryStyle->None,ContourStyle->None,PlotPoints->100],ContourPlot3D[{c1==1,c2==1},{x,-u,u},{y,-Sqrt[u^2-1],Sqrt[u^2-1]},{z,-Sqrt[u^2-1],Sqrt[u^2-1]},ColorFunction->"DarkRainbow",BoundaryStyle->None,Mesh->None,PlotPoints->100],Graphics3D[{Red,Thick,Line[p0]}],Graphics3D[{Blue,Thick,Line[P]}],PlotRange->All,BoxRatios->Automatic];
Export["demogeoN.png",demogeoN];
demonogeoN=Show[Graphics3D[{Red,Thick,Line[p0]}],Graphics3D[{Blue,Thick,Line[P]}],PlotRange->All,BoxRatios ->Automatic];
Export["demonogeoN.png",demonogeoN];

rate2D=BarChart[{{284/400, 293/400}, {256/400, 268/400}, {221/400, 218/400},{149/400,155/400},{119/400,124/400},{18/400,17/400},{307/400,301/400},{613*3/10000,2419/10000},{2293*3/40000,6079/40000}},ChartLabels -> {{"A", "B", "C","D","E","F","G","H","I"},None},ChartLegends->{Interpreter["TeXExpression"]["k_{1}\\cdot S_{1}"],Interpreter["TeXExpression"]["k_{2}\\cdot S_{2}"]}];
Export["rate2D.png",rate2D];
rate3D=BarChart[{{8127/10000, 7759/10000}, {7391/10000, 6433/10000}, {5708/10000, 4301/10000},{4640/10000,3537/10000},{3566/10000,1994/10000},{1/400,0/400},{359/400,327/400},{147*9/10000,1157/10000},{249*9/40000,2711/40000}},ChartLabels -> {{"A", "B", "C","D","E","F","G","H","I"},None},ChartLegends->{Interpreter["TeXExpression"]["k_{1}\\cdot S_{1}"],Interpreter["TeXExpression"]["k_{2}\\cdot S_{2}"]}];
Export["rate3D.png",rate3D];
